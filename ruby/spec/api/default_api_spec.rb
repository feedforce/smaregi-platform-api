=begin
#スマレジ

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::DefaultApi)
    end
  end

  # unit tests for create_customers
  # 会員情報を登録します。
  # @param contract_id 契約id
  # @param [Hash] opts the optional parameters
  # @option opts [CreateCustomers] :create_customers 
  # @return [CustomersResponseOfCreate]
  describe 'create_customers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_coupons
  # 指定されたクーポンを削除します。 
  # @param contract_id 契約id
  # @param coupon_id クーポンid
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_coupons test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_coupons
  # Your GET endpoint
  # クーポンの一覧を取得します。
  # @param contract_id 契約id
  # @param [Hash] opts the optional parameters
  # @return [Array<Coupon>]
  describe 'get_coupons test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_customer_point_list
  # 会員ポイント一覧取得
  # 会員ポイント情報一覧を取得します。 参照にあたりポイント有効期限を参照し、ポイント残高がありかつ期限が切れていれば期限切れ分のポイント失効処理を行ってから返します。
  # @param contract_id 契約id
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 一度に返すアイテム数 (上限 1000)
  # @option opts [Integer] :page ページ
  # @option opts [String] :customer_id 顧客id
  # @return [Array<GetCustomerPointListItem>]
  describe 'get_customer_point_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_customers
  # 会員情報一覧を取得します。
  # @param contract_id 契約id
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 一度に返すアイテム数 (上限 1000)
  # @option opts [Integer] :page ページ
  # @option opts [String] :customer_code 顧客コード
  # @return [Array<GetCustomersItem>]
  describe 'get_customers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_layaway_by_id
  # Your GET endpoint
  # @param contract_id 契約id
  # @param layaway_id 
  # @param [Hash] opts the optional parameters
  # @option opts [WithDetails] :with_details 取引明細情報を付加するか(全項目付加する場合はall, 一部項目を付加する場合はsummary, しない場合はnone)
  # @option opts [WithEnum] :with_store 店舗情報を付加するか(付加する場合はall, しない場合はnone)
  # @option opts [WithEnum] :with_customer 会員情報を付加するか(付加する場合はall, しない場合はnone)
  # @return [GetLayawayById]
  describe 'get_layaway_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_layaway_list
  # 取置き一覧を取得します。
  # @param contract_id 契約id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sum_date 締め日 [YYYY-MM-DD]
  # @option opts [WithEnum] :with_layaway 取置き情報を付加するか(付加する場合はall, しない場合はnone)
  # @return [Array<GetLayawayListItem>]
  describe 'get_layaway_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_stores
  # 店舗一覧取得
  # 店舗情報一覧を取得します。 
  # @param contract_id 契約id
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :limit 一度に返すアイテム数 (上限 1000)
  # @option opts [WithEnum] :with_point_condition ポイント情報を付加するか(付加する場合はall, しない場合はnone)
  # @return [Array<GetStoresResponseItem>]
  describe 'get_stores test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_transaction
  # 取引情報一覧を取得します。
  # @param contract_id 契約id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :sum_date 締め日 [YYYY-MM-DD]
  # @option opts [WithEnum] :with_layaway 取置き情報を付加するか(付加する場合はall, しない場合はnone)
  # @option opts [Integer] :limit 一度に返すアイテム数 (上限 1000)
  # @option opts [Integer] :page ページ
  # @option opts [String] :upd_date_time_to 更新日時(To)：登録時・更新時の日時。[YYYY-MM-DDThh:mm:ssTZD]
  # @option opts [String] :upd_date_time_from 更新日時(From)：登録時・更新時の日時。[YYYY-MM-DDThh:mm:ssTZD]
  # @option opts [String] :customer_code 会員コード
  # @option opts [TransactionHeadDivision] :transaction_head_division 
  # @option opts [Sort] :sort 
  # @option opts [String] :terminal_tran_date_time_from 端末取引日時(From)：端末で設定された取引日時。[YYYY-MM-DDThh:mm:ssTZD]
  # @option opts [String] :terminal_tran_date_time_to 端末取引日時(To)：端末で設定された取引日時。[YYYY-MM-DDThh:mm:ssTZD]
  # @return [Array<GetTransactionItem>]
  describe 'get_transaction test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_transaction_id
  # 取引情報を取得します。
  # @param contract_id 契約id
  # @param transaction_id 取引id
  # @param [Hash] opts the optional parameters
  # @option opts [WithEnum] :with_coupons クーポン情報を付加するか(付加する場合はall, しない場合はnone)
  # @option opts [WithDetails] :with_details 取引明細情報を付加するか(全項目付加する場合はall, 一部項目を付加する場合はsummary, しない場合はnone)
  # @option opts [WithEnum] :with_store 店舗情報を付加するか(付加する場合はall, しない場合はnone)
  # @option opts [WithEnum] :with_customer 会員情報を付加するか(付加する場合はall, しない場合はnone)
  # @return [GetTransactionId]
  describe 'get_transaction_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_create_coupons
  # クーポンを登録します。 
  # @param contract_id 契約id
  # @param post_create_coupons 
  # @param [Hash] opts the optional parameters
  # @return [Coupon]
  describe 'post_create_coupons test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_customer_point
  # 会員ポイント更新
  # 会員ポイント情報を更新します。 ポイントおよびマイルは、入力された値と同じになるよう更新します。
  # @param contract_id 契約id
  # @param customer_id 顧客id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateCustomerPointRequest] :update_customer_point_request 
  # @return [UpdateCustomerPointResponse]
  describe 'update_customer_point test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_customer_point_relative
  # 会員ポイント情報を更新します。 ポイントおよびマイルは、現在の値に対し、入力された値を加算（入力値が負の場合は減算）した値に更新します。 現在値参照にあたりポイント有効期限を参照し、ポイント残高がありかつ期限が切れていれば期限切れ分のポイント失効処理を行ってから加算を行います（失効で0になっているので減算はエラー）。
  # @param contract_id 契約id
  # @param customer_id 顧客id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateCustomerPointRequest] :update_customer_point_request 
  # @return [UpdateCustomerPointResponse]
  describe 'update_customer_point_relative test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_customers
  # @param contract_id 契約id
  # @param customer_id 顧客id
  # @param [Hash] opts the optional parameters
  # @option opts [PatchCustomers] :patch_customers 
  # @return [CustomersResponseOfCreate]
  describe 'update_customers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_store
  # 店舗更新
  # 店舗情報を更新します。 
  # @param contract_id 契約id
  # @param store_id 店舗id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateStoreRequest] :update_store_request 
  # @return [UpdateStoreResponse]
  describe 'update_store test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
